{
  "_from": "ts-xor@^1.3.0",
  "_id": "ts-xor@1.3.0",
  "_inBundle": false,
  "_integrity": "sha512-RLXVjliCzc1gfKQFLRpfeD0rrWmjnSTgj7+RFhoq3KRkUYa8LE/TIidYOzM5h+IdFBDSjjSgk9Lto9sdMfDFEA==",
  "_location": "/ts-xor",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "ts-xor@^1.3.0",
    "name": "ts-xor",
    "escapedName": "ts-xor",
    "rawSpec": "^1.3.0",
    "saveSpec": null,
    "fetchSpec": "^1.3.0"
  },
  "_requiredBy": [
    "/@vonage/voice"
  ],
  "_resolved": "https://registry.npmjs.org/ts-xor/-/ts-xor-1.3.0.tgz",
  "_shasum": "3e59f24f0321f9f10f350e0cee3b534b89a2c70b",
  "_spec": "ts-xor@^1.3.0",
  "_where": "D:\\personal\\learning\\thoughtctl\\services\\node_modules\\@vonage\\voice",
  "author": {
    "name": "Kostis Maninakis",
    "email": "maninak@protonmail.com",
    "url": "https://maninak.github.io"
  },
  "bugs": {
    "url": "https://github.com/maninak/ts-xor/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "Compose custom types containing mutually exclusive keys, using this generic Typescript helper type.",
  "devDependencies": {
    "publint": "^0.2.2",
    "tsup": "^7.2.0",
    "typescript": "^5.2.2"
  },
  "exports": {
    ".": {
      "import": {
        "types": "./dist/index.d.mts",
        "node": "./dist/index.mjs"
      },
      "require": {
        "types": "./dist/index.d.ts",
        "node": "./dist/index.js"
      }
    }
  },
  "homepage": "https://github.com/maninak/ts-xor#README.md",
  "keywords": [
    "typescript",
    "custom types",
    "mutually exlusive keys",
    "xor",
    "maninak"
  ],
  "license": "MIT",
  "main": "./dist/index.js",
  "module": "./dist/index.mjs",
  "name": "ts-xor",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/maninak/ts-xor.git"
  },
  "scripts": {
    "build": "tsup src/index.ts --format esm,cjs --dts --sourcemap --clean",
    "codegen": "node ./src/xorFactory.js > ./src/types/xor.ts",
    "postpublish": "git push --tags",
    "prebuild": "npm run codegen",
    "pretest": "npm run codegen",
    "preversion": "npm run build && npm test",
    "test": "npm run test:smoke && npm run test:unit  && npm run test:package",
    "test:package": "publint",
    "test:smoke": "tsc -p . --noEmit",
    "test:unit": "sh scripts/run-tests.sh"
  },
  "sideEffects": false,
  "types": "./dist/index.d.ts",
  "version": "1.3.0"
}
